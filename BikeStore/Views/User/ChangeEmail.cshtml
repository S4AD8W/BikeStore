
@{
  ViewData["Title"] = "ChangePassword";
}

<div class="row">
  <div class="col-sm-3 col-md-3">
    @await Html.PartialAsync("prlMenu")
  </div>
  <div class="col-sm-9 col-md-9">
    <div class="card">
      <div class="card-header">
        @Languages.GetText(TextEnum.ChangeEmail)
      </div>
      <div class="card-body">
        <div class="col-md-4">
          <form asp-action="ChangeEmail" id="ChangePasswordForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
              <label for="Email" class="control-label">@Languages.GetText(TextEnum.OldPassword)</label>
              <input name="Email" type="email" class="form-control" required />

            </div>
            <div class="form-group">
              <label for="Password" class="validati">@Languages.GetText(TextEnum.NewPassword)</label>
              <input name="Password" type="password" class="form-control " required />

            </div>
            
            <div class="form-group">
              <input type="submit" value="@Languages.GetText(TextEnum.ChangeEmail)" class="btn btn-default" />
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>

     $(document).ready(function() {
    debugger;
         let pChangePasswordForm = $("#ChangePasswordForm");

         pChangePasswordForm.validate({
             rules: {
               Email: {
                   required: true,
                   remote: {
                     url: "/Account/CheckEmailIfAlreadyExist",
                       type: "post"
                   }
               },
                 NewPassword: {
                     required: true,
                   minlength: 8,
                                    
                  },
           },

           messages: {

               OldPassowrd: {
                   required: "@Html.Raw(Languages.GetText(TextEnum.ThisFieldIsRequired))",
                   remote: "@Html.Raw(Languages.GetText(TextEnum.IncorrectPassword))",
                    equalTo: "@Html.Raw(Languages.GetText(TextEnum.YoursPasswordDoesntMatchConfirmPasswordField))"
               },
               NewPassword: {
                   required: "@Html.Raw(Languages.GetText(TextEnum.ThisFieldIsRequired))",
                   minlenght: "@Html.Raw(Languages.GetText(TextEnum.YoursPasswordMustByMinLenghtEightCharacters))",
                   equalTo: "@Html.Raw(Languages.GetText(TextEnum.YoursPasswordDoesntMatchConfirmPasswordField))"
               },
             ConfirmPassword: {
               required: "@Html.Raw(Languages.GetText(TextEnum.ThisFieldIsRequired))",
               minlenght: "@Html.Raw(Languages.GetText(TextEnum.YoursPasswordMustByMinLenghtEightCharacters))",
               equalTo: "@Html.Raw(Languages.GetText(TextEnum.YoursPasswordDoesntMatchConfirmPasswordField))"
               }
           },
       });

    });
</script>
