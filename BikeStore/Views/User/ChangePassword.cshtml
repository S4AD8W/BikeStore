
@{
    ViewData["Title"] = "ChangePassword";
}

<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-header">
                @Languages.GetText(TextEnum.ChangePassword)
            </div>
            <div class="card-body">
                <div class="col-md-4">
                    <form asp-action="ChangePasswor" id="ChangePasswordForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label for="OldPassword" class="control-label">@Languages.GetText(TextEnum.OldPassword)</label>
                            <input name="OldPassowrd" class="form-control" required />

                        </div>
                        <div class="form-group">
                            <label for="NewPassword" class="validati">@Languages.GetText(TextEnum.NewPassword)</label>
                            <input name="NewPassword" class="form-control " required />

                        </div>
                        <div class="form-group">
                            <label for="ConfirmPassword" class="control-label">@Languages.GetText(TextEnum.ConfirmNewPassword)</label>
                            <input name="ConfirmPassword" class="form-control" required />

                        </div>
                        <div class="form-group">
                            <input type="submit" value="@Languages.GetText(TextEnum.ChangePassword)" class="btn btn-default" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

     $(document).ready(function() {
    debugger;
         let pChangePasswordForm = $("#ChangePasswordForm");

         pChangePasswordForm.validate({
             rules: {
                 OldPassowrd: {
                   required: true,
                   remote: {
                       url: "/User/CheckOldPassword",
                       type: "post"
                   }
               },
                 NewPassword: {
                     required: true,
                     minlength: 8,
               },
                 ConfirmPassword: {
                     required: true,
                     minlength: 8,
                     equalTo: "OldPassowrd"
                   
               },
           },

           messages: {
               
               OldPassowrd: {
                   required: "@Html.Raw(Languages.GetText(TextEnum.ThisFieldIsRequired))",
                   remote: "@Html.Raw(Languages.GetText(TextEnum.ThisEmailAddressAlreadyExist))"
               },
               NewPassword: {
                   required: "@Html.Raw(Languages.GetText(TextEnum.ThisFieldIsRequired))",
                   minlenght: "@Html.Raw(Languages.GetText(TextEnum.YoursPasswordMustByMinLenghtEightCharacters))",
                   equalTo: "@Html.Raw(Languages.GetText(TextEnum.YoursPasswordDoesntMatchConfirmPasswordField))"
               },
               ConfirmPassword: {
                   required: "@Html.Raw(Languages.GetText(TextEnum.ThisFieldIsRequired))",
                   minlenght: "@Html.Raw(Languages.GetText(TextEnum.YoursPasswordMustByMinLenghtEightCharacters))"
               }
           },
       });

    });
</script>
